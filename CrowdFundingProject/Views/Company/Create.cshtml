@model CrowdFundingProject.Models.Company

<h2>Create new project</h2>
<div class="container">
    @using (Html.BeginForm())
    {
        @Html.LabelFor(model => model.Name, "Name")
        <br />
        @Html.EditorFor(model => model.Name)
        <br />
        @Html.LabelFor(model => model.ShortDescription, "ShortDescription")
        <br />
        @Html.TextAreaFor(model => model.ShortDescription, 2, 50, null)
        <br />
        @Html.LabelFor(model => model.LongDescription, "LongDescription")
        <br />
        @Html.TextAreaFor(model => model.LongDescription, 10, 50, null)
        <br />
        <br />
        @Html.LabelFor(model => model.CategoryId, "CategoryId, 1-Music, 2-VideoGames,3-Education, 4-Sport, 5-StartUp")
        <br />
        @Html.EditorFor(model => model.CategoryId)
        <br />

        <br />
        @Html.LabelFor(model => model.MoneyNeeded, "MoneyNeeded")
        <br />
        @Html.EditorFor(model => model.MoneyNeeded)
        <br />
        @* <br />
            @Html.LabelFor(model => model.Category.CategoryName, "CategoryName")
            <br />
            @Html.EditorFor(model => model.Category.CategoryName)*@
        // @Html.DropDownListFor(Model.Category, new SelectList(foreach (var name in Model)){Model.Category.CategoryName })

        @Html.LabelFor(model => model.EndDate, "EndDate")
        <br />
        @Html.EditorFor(model => model.EndDate)
        <div class="editor-field invisible">
            @Html.EditorFor(model => model.ImageLink)
        </div>
        <div id="drop-area">
            <div class="my-form">
                <p>Chose your image or drag it into this area</p>
                <input type="file" id="fileElem" multiple accept="image/*" onchange="handleFiles(this.files)">
                <label class="button" for="fileElem">Chose</label>
            </div>
            <div id="gallery"></div>
        </div>
        <br />
        <input type="submit" value="Create" />
    }
</div>
<style>
    #drop-area {
        border: 2px dashed #ccc;
        border-radius: 20px;
        width: 280px;
        font-family: sans-serif;
        padding: 20px;
    }

        #drop-area.highlight {
            border-color: purple;
        }

    p {
        margin-top: 0;
    }

    .my-form {
        margin-bottom: 10px;
    }

    #gallery {
        margin-top: 10px;
    }

        #gallery img {
            width: 150px;
            margin-bottom: 10px;
            margin-right: 10px;
            vertical-align: middle;
        }

    .button {
        display: inline-block;
        padding: 10px;
        background: #ccc;
        cursor: pointer;
        border-radius: 5px;
        border: 1px solid #ccc;
    }

        .button:hover {
            background: #ddd;
        }

    #fileElem {
        display: none;
    }
</style>
<script src="~/js/bootstrap.min.js"></script>
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<script type="text/javascript">
    let dropArea = document.getElementById('drop-area')
    ;['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
        dropArea.addEventListener(eventName, preventDefaults, false)
    })
    function preventDefaults(e) {
        e.preventDefault()
        e.stopPropagation()
    }
    ;['dragenter', 'dragover'].forEach(eventName => {
        dropArea.addEventListener(eventName, highlight, false)
    })
    ;['dragleave', 'drop'].forEach(eventName => {
        dropArea.addEventListener(eventName, unhighlight, false)
    })
    function highlight(e) {
        dropArea.classList.add('highlight')
    }
    function unhighlight(e) {
        dropArea.classList.remove('highlight')
    }
    dropArea.addEventListener('drop', handleDrop, false)
    function handleDrop(e) {
        let dt = e.dataTransfer
        let files = dt.files
        handleFiles(files)
    }
    function handleFiles(files) {
        files = [...files]
        files.forEach(uploadFile)
        files.forEach(previewFile)
    }
    function uploadFile(file) {
        var url = 'https://api.cloudinary.com/v1_1/dufm2mtck/image/upload'
        var preset = 'ml_default'
        var formData = new FormData()
        formData.append('file', file);
        formData.append('upload_preset', preset);
        axios({
            url: url,
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded'
            },
            data: formData
        })
            .then(function (res) {
                document.getElementById('@Html.IdFor(model => model.ImageLink)').value = res.data.secure_url;
                alert(res.data.secure_url);
            })
            .catch(function (err) {
                alert("ERROR!!!!");
            });
    }
    function previewFile(file) {
        let reader = new FileReader()
        reader.readAsDataURL(file)
        reader.onloadend = function () {
            let img = document.createElement('img')
            img.src = reader.result
            document.getElementById('gallery').appendChild(img)
        }
    }
</script>

